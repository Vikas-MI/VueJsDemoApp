{"ast":null,"code":"import { ValidationObserver, ValidationProvider } from \"vee-validate\";\nexport default {\n  name: \"BootstrapForm\",\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    email: \"\",\n    password: \"\",\n    confirmation: \"\",\n    subject: \"\",\n    choices: []\n  }),\n  methods: {\n    onSubmit() {\n      console.log(\"Form submitted yay!\");\n    },\n    resetForm() {\n      this.email = \"\";\n      this.password = \"\";\n      this.confirmation = \"\";\n      this.subject = \"\";\n      this.choices = [];\n      requestAnimationFrame(() => {\n        this.$refs.observer.reset();\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidationObserver","ValidationProvider","name","components","data","email","password","confirmation","subject","choices","methods","onSubmit","console","log","resetForm","requestAnimationFrame","$refs","observer","reset"],"sources":["/Applications/MAMP/htdocs/Vue/Demo/restaurant-app/restaurent-app/src/components/ValidateForm.vue"],"sourcesContent":["<template>\n    <ValidationObserver ref=\"observer\" v-slot=\"{ handleSubmit }\">\n        <b-form @submit.prevent=\"handleSubmit(onSubmit)\" @reset=\"resetForm\">\n            <ValidationProvider rules=\"required|email\" name=\"Email\" v-slot=\"{ valid, errors }\">\n                <b-form-group\n                        label=\"Email address:\"\n                        label-for=\"exampleInput1\"\n                        description=\"We'll never share your email with anyone else.\"\n                >\n                    <b-form-input\n                            type=\"email\"\n                            v-model=\"email\"\n                            :state=\"errors[0] ? false : (valid ? true : null)\"\n                            placeholder=\"Enter email\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback id=\"inputLiveFeedback\">{{ errors[0] }}</b-form-invalid-feedback>\n                </b-form-group>\n            </ValidationProvider>\n\n            <ValidationProvider\n                    rules=\"required\"\n                    name=\"Password\"\n                    vid=\"password\"\n                    v-slot=\"{ valid, errors }\"\n            >\n                <b-form-group\n                        label=\"Password:\"\n                        description=\"We'll never share your password with anyone else.\"\n                >\n                    <b-form-input\n                            type=\"password\"\n                            v-model=\"password\"\n                            :state=\"errors[0] ? false : (valid ? true : null)\"\n                            placeholder=\"Enter password\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback id=\"inputLiveFeedback\">{{ errors[0] }}</b-form-invalid-feedback>\n                </b-form-group>\n            </ValidationProvider>\n\n            <ValidationProvider\n                    rules=\"required|confirmed:password\"\n                    name=\"Password confirmation\"\n                    v-slot=\"{ valid, errors }\"\n            >\n                <b-form-group label=\"Confirm Password:\" label-for=\"exampleInput1\">\n                    <b-form-input\n                            type=\"password\"\n                            v-model=\"confirmation\"\n                            :state=\"errors[0] ? false : (valid ? true : null)\"\n                            placeholder=\"Confirm Password\"\n                    ></b-form-input>\n                    <b-form-invalid-feedback id=\"inputLiveFeedback\">{{ errors[0] }}</b-form-invalid-feedback>\n                </b-form-group>\n            </ValidationProvider>\n\n            <ValidationProvider name=\"Subject\" rules=\"required\" v-slot=\"{ valid, errors }\">\n                <b-form-group id=\"exampleInputGroup3\" label=\"Subject:\" label-for=\"exampleInput3\">\n                    <b-form-select\n                            id=\"exampleInput3\"\n                            :state=\"errors[0] ? false : (valid ? true : null)\"\n                            v-model=\"subject\"\n                    >\n                        <option value>None</option>\n                        <option value=\"S1\">Subject 1</option>\n                        <option value=\"S2\">Subject 2</option>\n                    </b-form-select>\n                    <b-form-invalid-feedback id=\"inputLiveFeedback\">{{ errors[0] }}</b-form-invalid-feedback>\n                </b-form-group>\n            </ValidationProvider>\n\n            <ValidationProvider name=\"Drink\" rules=\"required|length:2\" v-slot=\"{ valid, errors }\">\n                <b-form-group id=\"exampleGroup4\">\n                    <b-form-checkbox-group\n                            :state=\"errors[0] ? false : (valid ? true : null)\"\n                            v-model=\"choices\"\n                            id=\"exampleChecks\"\n                    >\n                        <b-form-checkbox value=\"Coffee\">Coffe</b-form-checkbox>\n                        <b-form-checkbox value=\"Tea\">Tea</b-form-checkbox>\n                        <b-form-checkbox value=\"Soda\">Soda</b-form-checkbox>\n                    </b-form-checkbox-group>\n                    <b-form-invalid-feedback id=\"inputLiveFeedback\">{{ errors[0] }}</b-form-invalid-feedback>\n                </b-form-group>\n            </ValidationProvider>\n            <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n            <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n        </b-form>\n    </ValidationObserver>\n</template>\n\n<script>\nimport { ValidationObserver, ValidationProvider } from \"vee-validate\";\n\nexport default {\n    name: \"BootstrapForm\",\n    components: {\n        ValidationObserver,\n        ValidationProvider\n    },\n    data: () => ({\n        email: \"\",\n        password: \"\",\n        confirmation: \"\",\n        subject: \"\",\n        choices: []\n    }),\n    methods: {\n        onSubmit() {\n            console.log(\"Form submitted yay!\");\n        },\n        resetForm() {\n            this.email = \"\";\n            this.password = \"\";\n            this.confirmation = \"\";\n            this.subject = \"\";\n            this.choices = [];\n            requestAnimationFrame(() => {\n                this.$refs.observer.reset();\n            });\n        }\n    }\n};\n</script>\n"],"mappings":"AA2FA,SAASA,kBAAkB,EAAEC,kBAAiB,QAAS,cAAc;AAErE,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACRH,kBAAkB;IAClBC;EACJ,CAAC;EACDG,IAAI,EAAEA,CAAA,MAAO;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACPC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC,CAAC;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,CAACT,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI,CAACC,OAAM,GAAI,EAAE;MACjBM,qBAAqB,CAAC,MAAM;QACxB,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,KAAK,EAAE;MAC/B,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css';\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from 'yup';\nconst passwordRules = yup.string().required().min(8);\nconst schema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(8)\n});\n// defineRule(\"required\", (value) => {\n//     if (!value || !value.length) {\n//         return \"This field is required\";\n//     }\n//     return true;\n// });\n// defineRule(\"minLength\", (value, [limit]) => {\n//     if (!value || !value.length) {\n//         return true;\n//     }\n//     if (value.length < limit) {\n//         return `This field must be at least ${limit} characters`;\n//     }\n//     return true;\n// });\nexport default {\n  name: \"SignUp\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  validations() {\n    return {\n      form: {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required,\n          min: minLength(6)\n        }\n      }\n    };\n  },\n  methods: {\n    onSubmit(values) {\n      console.log(values);\n    },\n    async Login() {\n      let result = await axios.get(`http://192.168.1.250:3000/user?email=${this.email}&password=${this.password}`);\n      if (result.status === 200 && result.data.length > 0) {\n        toast.success('Login successfully.');\n        localStorage.setItem(\"userInfo\", JSON.stringify(result.data[0]));\n        await this.$router.push({\n          name: 'Home'\n        });\n      }\n    }\n  },\n  mounted() {\n    let user = localStorage.getItem('userInfo');\n    if (user) {\n      this.$router.push({\n        name: 'Home'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","Form","Field","ErrorMessage","yup","passwordRules","string","required","min","schema","object","email","password","name","data","components","validations","form","minLength","methods","onSubmit","values","console","log","Login","result","get","status","length","success","localStorage","setItem","JSON","stringify","$router","push","mounted","user","getItem"],"sources":["/Applications/MAMP/htdocs/Vue/Demo/restaurant-app/restaurent-app/src/components/Login.vue"],"sourcesContent":["<template>\n    <img class=\"logo\" src=\"../assets/img.png\"/>\n    <h3>Login</h3>\n    <Form  @submit=\"onSubmit\">\n        <div class=\"container\">\n            <div class=\"mb-3 row justify-content-center\">\n                <div class=\"col-md-3\">\n                    <label for=\"formGroupExampleInput2\" class=\"form-label\">Email</label>\n                    <Field type=\"text\" v-model=\"email\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Enter email\" name=\"email\"  />\n\n                    <ErrorMessage class=\"danger\" name=\"email\" />\n                    <br />\n                </div>\n            </div>\n            <div class=\"mb-3 row justify-content-center\">\n                <div class=\"col-md-3\">\n                    <label for=\"formGroupExampleInput2\" class=\"form-label\">Password</label>\n                    <Field type=\"password\" v-model=\"password\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Enter password\" name=\"password\" :rules=\"passwordRules\"  />\n                    <ErrorMessage class=\"danger\" name=\"password\" />\n                    <br />\n                </div>\n            </div>\n<!--            <div class=\"mb-3\">-->\n<!--                <button type=\"button\" v-on:click=\"Login\" class=\"btn btn-primary form-control\"> Submit </button>-->\n<!--            </div>-->\n            <div class=\"mb-3 row justify-content-center\">\n                <div class=\"col-md-3\">\n                <button class=\"btn btn-primary form-control\">Submit</button>\n                </div>\n            </div>\n\n            <div class=\"mb-3\">\n                <router-link  to=\"/sign-up\">SignUp</router-link>\n            </div>\n        </div>\n    </Form>\n</template>\n\n<style>\n.danger{\n    color: red;\n}\n</style>\n<script >\nimport axios from 'axios'\nimport { toast } from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css';\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from 'yup';\nconst passwordRules = yup.string().required().min(8);\n\nconst schema = yup.object({\n    email: yup.string().required().email(),\n    password: yup.string().required().min(8),\n});\n// defineRule(\"required\", (value) => {\n//     if (!value || !value.length) {\n//         return \"This field is required\";\n//     }\n//     return true;\n// });\n// defineRule(\"minLength\", (value, [limit]) => {\n//     if (!value || !value.length) {\n//         return true;\n//     }\n//     if (value.length < limit) {\n//         return `This field must be at least ${limit} characters`;\n//     }\n//     return true;\n// });\nexport default {\n    name: \"SignUp\",\n    data()\n    {\n        return {\n            email : \"\",\n            password : \"\"\n        }\n    },\n    components: {\n        Form,\n        Field,\n        ErrorMessage,\n    },\n    validations() {\n        return {\n            form: {\n                email: { required, email },\n                password: { required, min: minLength(6) },\n            },\n        }\n    },\n    methods:{\n        onSubmit(values) {\n            console.log(values);\n        },\n        async Login(){\n            let result = await axios.get(\n                `http://192.168.1.250:3000/user?email=${this.email}&password=${this.password}`\n            )\n            if(result.status === 200 && result.data.length > 0){\n                toast.success('Login successfully.');\n                localStorage.setItem(\"userInfo\",JSON.stringify(result.data[0]));\n                await this.$router.push({name: 'Home'})\n            }\n        }\n    },\n    mounted() {\n        let user = localStorage.getItem('userInfo');\n        if(user) {\n            this.$router.push({name: 'Home'})\n        }\n    }\n}\n</script>\n<style>\n.logo{\n    height: 100px;\n    width: 100px;\n}\n.register input{\n\n}\n</style>"],"mappings":";AA4CA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,KAAI,QAAS,eAAe;AACrC,OAAO,8BAA8B;AACrC,SAASC,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,MAAMC,aAAY,GAAID,GAAG,CAACE,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC;AAEpD,MAAMC,MAAK,GAAIL,GAAG,CAACM,MAAM,CAAC;EACtBC,KAAK,EAAEP,GAAG,CAACE,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACI,KAAK,EAAE;EACtCC,QAAQ,EAAER,GAAG,CAACE,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACC,GAAG,CAAC,CAAC;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;EACXK,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EACJ;IACI,OAAO;MACHH,KAAI,EAAI,EAAE;MACVC,QAAO,EAAI;IACf;EACJ,CAAC;EACDG,UAAU,EAAE;IACRd,IAAI;IACJC,KAAK;IACLC;EACJ,CAAC;EACDa,WAAWA,CAAA,EAAG;IACV,OAAO;MACHC,IAAI,EAAE;QACFN,KAAK,EAAE;UAAEJ,QAAQ;UAAEI;QAAM,CAAC;QAC1BC,QAAQ,EAAE;UAAEL,QAAQ;UAAEC,GAAG,EAAEU,SAAS,CAAC,CAAC;QAAE;MAC5C;IACJ;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,QAAQA,CAACC,MAAM,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC;IACD,MAAMG,KAAKA,CAAA,EAAE;MACT,IAAIC,MAAK,GAAI,MAAM1B,KAAK,CAAC2B,GAAG,CACvB,wCAAuC,IAAI,CAACf,KAAM,aAAY,IAAI,CAACC,QAAS,GACjF;MACA,IAAGa,MAAM,CAACE,MAAK,KAAM,GAAE,IAAKF,MAAM,CAACX,IAAI,CAACc,MAAK,GAAI,CAAC,EAAC;QAC/C5B,KAAK,CAAC6B,OAAO,CAAC,qBAAqB,CAAC;QACpCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACR,MAAM,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,MAAM,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;UAACtB,IAAI,EAAE;QAAM,CAAC;MAC1C;IACJ;EACJ,CAAC;EACDuB,OAAOA,CAAA,EAAG;IACN,IAAIC,IAAG,GAAIP,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC;IAC3C,IAAGD,IAAI,EAAE;MACL,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC;QAACtB,IAAI,EAAE;MAAM,CAAC;IACpC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}